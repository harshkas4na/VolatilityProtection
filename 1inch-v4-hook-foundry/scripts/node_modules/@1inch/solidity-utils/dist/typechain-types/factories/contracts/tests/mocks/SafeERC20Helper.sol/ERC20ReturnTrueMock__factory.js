"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERC20ReturnTrueMock__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "allowance_",
                type: "uint256",
            },
        ],
        name: "setAllowance",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x6080806040523461001657610217908161001b8239f35b5f80fdfe6040608081526004361015610012575f80fd5b5f3560e01c8063095ea7b3146100bd57806323b872dd146101045780633ba93f26146100c2578063a9059cbb146100bd5763dd62ed3e14610051575f80fd5b346100b957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100b95760209073ffffffffffffffffffffffffffffffffffffffff61009f610154565b6100a7610177565b50165f525f8252805f20549051908152f35b5f80fd5b61019a565b50346100b95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100b957335f525f602052600435905f20555f80f35b50346100b95760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100b95760209061013f610154565b50610148610177565b505f6001555160018152f35b6004359073ffffffffffffffffffffffffffffffffffffffff821682036100b957565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036100b957565b346100b95760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100b9576101d1610154565b505f600155602060405160018152f3fea264697066735822122020901400d6a587e9a33333bd12c61cfa77583bdfd3b7237a825d0799aa09b34b64736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class ERC20ReturnTrueMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.ERC20ReturnTrueMock__factory = ERC20ReturnTrueMock__factory;
ERC20ReturnTrueMock__factory.bytecode = _bytecode;
ERC20ReturnTrueMock__factory.abi = _abi;
//# sourceMappingURL=ERC20ReturnTrueMock__factory.js.map