import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type { ERC20WithSafeBalance, ERC20WithSafeBalanceInterface } from "../../../../../contracts/tests/mocks/SafeERC20Helper.sol/ERC20WithSafeBalance";
type ERC20WithSafeBalanceConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ERC20WithSafeBalance__factory extends ContractFactory {
    constructor(...args: ERC20WithSafeBalanceConstructorParams);
    getDeployTransaction(token: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(token: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ERC20WithSafeBalance & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): ERC20WithSafeBalance__factory;
    static readonly bytecode = "0x60a03461007057601f61031238819003918201601f19168301916001600160401b038311848410176100745780849260209460405283398101031261007057516001600160a01b0381168103610070576080526040516102899081610089823960805181818160b1015261017b0152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe608060409080825260049081361015610016575f80fd5b5f3560e01c90816370a08231146100f6575063bd166e2f14610036575f80fd5b346100f25760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100f25780359073ffffffffffffffffffffffffffffffffffffffff821682036100f2577f70a08231000000000000000000000000000000000000000000000000000000005f525260205f6024817f00000000000000000000000000000000000000000000000000000000000000005afa5f51901560203d10176100e85760209151908152f35b50513d5f823e3d90fd5b5f80fd5b8284346100f257602092837ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100f257823573ffffffffffffffffffffffffffffffffffffffff908181168091036100f257602483879381937f70a08231000000000000000000000000000000000000000000000000000000008352888301527f0000000000000000000000000000000000000000000000000000000000000000165afa928315610249575f936101b3575b505051908152f35b9091925083903d8511610241575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011683019083821067ffffffffffffffff8311176102155750849183918552810103126100f257519083806101ab565b6041907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b3d91506101c1565b82513d5f823e3d90fdfea264697066735822122062cb5352eb88f5768ae8343795742e1aafbbc2757b1de40e1dc555649a064cb264736f6c63430008170033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "safeBalanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): ERC20WithSafeBalanceInterface;
    static connect(address: string, runner?: ContractRunner | null): ERC20WithSafeBalance;
}
export {};
