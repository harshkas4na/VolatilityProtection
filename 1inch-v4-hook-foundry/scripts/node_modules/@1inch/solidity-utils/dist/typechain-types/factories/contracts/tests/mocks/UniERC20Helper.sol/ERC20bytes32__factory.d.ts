import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, BytesLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type { ERC20bytes32, ERC20bytes32Interface } from "../../../../../contracts/tests/mocks/UniERC20Helper.sol/ERC20bytes32";
type ERC20bytes32ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ERC20bytes32__factory extends ContractFactory {
    constructor(...args: ERC20bytes32ConstructorParams);
    getDeployTransaction(name_: BytesLike, symbol_: BytesLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(name_: BytesLike, symbol_: BytesLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ERC20bytes32 & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): ERC20bytes32__factory;
    static readonly bytecode = "0x60803461005857601f61014838819003918201601f19168301916001600160401b0383118484101761005c5780849260409485528339810103126100585760208151910151905f5560015560405160d790816100718239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60808060405260043610156011575f80fd5b5f3560e01c90816306fdde0314606c57506395d89b4114602f575f80fd5b346068575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126068576020600154604051908152f35b5f80fd5b346068575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126068576020905f548152f3fea2646970667358221220c552d9c94c93eba2d184c3ab0e1398a950ceb6bfe08f795d6ba360879fa4d4af64736f6c63430008170033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "name_";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "symbol_";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): ERC20bytes32Interface;
    static connect(address: string, runner?: ContractRunner | null): ERC20bytes32;
}
export {};
