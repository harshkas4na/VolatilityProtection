"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StringUtilTest__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "expected",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "actual",
                type: "uint256",
            },
        ],
        name: "GasCostDiffers",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "expectedGasCost",
                type: "uint256",
            },
        ],
        name: "toHex",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "expectedGasCost",
                type: "uint256",
            },
        ],
        name: "toHexBytes",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "expectedGasCost",
                type: "uint256",
            },
        ],
        name: "toHexNaive",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "expectedGasCost",
                type: "uint256",
            },
        ],
        name: "toHexNaiveBytes",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608080604052346100165761087f908161001b8239f35b5f80fdfe6040608081526004361015610012575f80fd5b5f3560e01c8063c11251fe14610120578063d69703c6146100f2578063e1425395146100c45763e57fb9de14610046575f80fd5b346100c057610054366101fd565b61005e5a92610731565b915a9003811515806100b6575b6100805783518061007c8582610287565b0390f35b604492508351917fe997626400000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b508181141561006b565b5f80fd5b50346100c0576100d3366102eb565b61005e5a928451906020820152602081526100ed81610139565b61031f565b50346100c057610101366102eb565b61005e5a9284519060208201526020815261011b81610139565b610731565b50346100c05761012f366101fd565b61005e5a9261031f565b6040810190811067ffffffffffffffff82111761015557604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761015557604052565b67ffffffffffffffff811161015557601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8201126100c05760043567ffffffffffffffff81116100c057816023820112156100c057806004013590610253826101c3565b926102616040519485610182565b828452602483830101116100c057815f9260246020930183860137830101529060243590565b6020808252825181830181905293925f5b8581106102d7575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f845f6040809697860101520116010190565b818101830151848201604001528201610298565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60409101126100c0576004359060243590565b9060408051928051918260011b91600260228701936022818901016040526130788289015201865260208094818301920101925b838210610361575050505050565b8285916106e68451610527817f3030303030303030303030303030303030303030303030303030303030303030908060401c907fffffffff000000000000000000000000000000000000000000000000000000006fffffffff0000000000000000000000006bffffffff000000000000000084167bffffffff00000000000000000000000000000000000000000000000084161760201c9316911617178060101c907fff00000000000000ff00000000000000ff00000000000000ff000000000000007bff00000000000000ff00000000000000ff00000000000000ff0000007aff00000000000000ff00000000000000ff00000000000000ff000084167eff00000000000000ff00000000000000ff00000000000000ff00000000000084161760081c9316911617177f0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f007e0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f8260081c169160041c161760077f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f7f0606060606060606060606060606060606060606060606060606060606060606830160041c1602010190565b835260801b7f3030303030303030303030303030303030303030303030303030303030303030908060401c907fffffffff000000000000000000000000000000000000000000000000000000006fffffffff0000000000000000000000006bffffffff000000000000000084167bffffffff00000000000000000000000000000000000000000000000084161760201c9316911617178060101c907fff00000000000000ff00000000000000ff00000000000000ff000000000000007bff00000000000000ff00000000000000ff00000000000000ff0000007aff00000000000000ff00000000000000ff00000000000000ff000084167eff00000000000000ff00000000000000ff00000000000000ff00000000000084161760081c9316911617177f0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f007e0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f8260081c169160041c161760077f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f7f0606060606060606060606060606060606060606060606060606060606060606830160041c1602010190565b8382015201910190610353565b908151811015610704570160200190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b805160019060029060011b6002019261076261074c856101c3565b9461075a6040519687610182565b8086526101c3565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06020860191013682378451156107045760309053835160011015610704578291607860218601535f925b6107b9575b5050505090565b8151831015610844576107cc83836106f3565b5160fc1c9260109081851015610704577f3031323334353637383961626364656600000000000000000000000000000000948582881b911a6108108583018a6106f3565b53600f61081d83876106f3565b5160f81c16928310156107045761083c6003889788951a9201896106f3565b5301926107ad565b6107b256fea264697066735822122045dd890b13544586124bb9969ff7f2f6c6a797e69470b0e05f0ce9d878cc3d3564736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class StringUtilTest__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.StringUtilTest__factory = StringUtilTest__factory;
StringUtilTest__factory.bytecode = _bytecode;
StringUtilTest__factory.abi = _abi;
//# sourceMappingURL=StringUtilTest__factory.js.map