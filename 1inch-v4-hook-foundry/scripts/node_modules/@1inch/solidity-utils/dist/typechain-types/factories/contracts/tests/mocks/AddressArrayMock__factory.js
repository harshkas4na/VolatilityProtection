"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressArrayMock__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "IndexOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "OutputArrayTooSmall",
        type: "error",
    },
    {
        inputs: [],
        name: "PopFromEmptyArray",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "i",
                type: "uint256",
            },
        ],
        name: "at",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "get",
        outputs: [
            {
                internalType: "address[]",
                name: "arr",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "length",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pop",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "push",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "set",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x6080806040523461001657610618908161001b8239f35b5f80fdfe60406080815260049081361015610014575f80fd5b5f3560e01c80631f7b6d321461054f5780632f30c6f6146104745780636d4ce63c1461026757806389b09de714610190578063a4ece52c146100bb5763e0886f901461005e575f80fd5b346100b75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100b757602091355f525f825273ffffffffffffffffffffffffffffffffffffffff815f2054169051908152f35b5f80fd5b5090346100b7575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100b7575f80525f602052815f2054908160a01c9081156101695750807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600192015f525f6020525f848120551161013b57005b7fffffffffffffffffffffffff0000000000000000000000000000000000000000905f805201905f20555f80f35b83517f06a2af9e000000000000000000000000000000000000000000000000000000008152fd5b5090346100b75760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100b7573573ffffffffffffffffffffffffffffffffffffffff81168091036100b75760016020925f80525f8452805f20928354938460a01c9485155f1461024257505074ffffffffffffffffffffffffffffffffffffffffff905f80525f8652740100000000000000000000000000000000000000000116815f20555b5191018152f35b74010000000000000000000000000000000000000000019055835f52815f205561023b565b5090346100b7575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100b757601f905f805260205f8152835f20548060a01c6102b38161059d565b938651947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09687910116850185811067ffffffffffffffff8211176104485787528185526103008261059d565b858501960136873784518211610421578161036e575b50505083929193519384938285019183865251809252840192915f5b82811061034157505050500390f35b835173ffffffffffffffffffffffffffffffffffffffff1685528695509381019392810192600101610332565b73ffffffffffffffffffffffffffffffffffffffff928551156103f5578316865260019260015b8381106103a3575050610316565b805f525f865281895f20541687518210156103c957600582901b88018701528401610395565b6032847f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b6032827f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b86517ff9a99b25000000000000000000000000000000000000000000000000000000008152fd5b6041827f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b5090346100b757817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100b7578035906024359173ffffffffffffffffffffffffffffffffffffffff83168093036100b7575f8080526020527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb55460a01c918282101561052857508061051857505f80525f60205260a01b17905f20555f80f35b5f90815260208190529290922055005b84517f4e23d035000000000000000000000000000000000000000000000000000000008152fd5b50346100b7575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100b7576020906105965f80525f60205260405f205460a01c90565b9051908152f35b67ffffffffffffffff81116105b55760051b60200190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffdfea264697066735822122091aa78962ebb2a8c502449daa3fc81d468cf80720ad75d3b198f4d6d6ce07dbe64736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class AddressArrayMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.AddressArrayMock__factory = AddressArrayMock__factory;
AddressArrayMock__factory.bytecode = _bytecode;
AddressArrayMock__factory.abi = _abi;
//# sourceMappingURL=AddressArrayMock__factory.js.map