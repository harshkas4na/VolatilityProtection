"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ERC20bytes32Capitals__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "name",
                type: "bytes32",
            },
            {
                internalType: "bytes32",
                name: "symbol",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "NAME",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "SYMBOL",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60803461005857601f61014838819003918201601f19168301916001600160401b0383118484101761005c5780849260409485528339810103126100585760208151910151905f5560015560405160d790816100718239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60808060405260043610156011575f80fd5b5f3560e01c908163a3f4df7e14606c575063f76f8d7814602f575f80fd5b346068575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126068576020600154604051908152f35b5f80fd5b346068575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126068576020905f548152f3fea2646970667358221220469dbb31b8813992358508d3fc4eb5aa836c2c5a630a38f54416877e1fd8f79564736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class ERC20bytes32Capitals__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(name, symbol, overrides) {
        return super.getDeployTransaction(name, symbol, overrides || {});
    }
    deploy(name, symbol, overrides) {
        return super.deploy(name, symbol, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.ERC20bytes32Capitals__factory = ERC20bytes32Capitals__factory;
ERC20bytes32Capitals__factory.bytecode = _bytecode;
ERC20bytes32Capitals__factory.abi = _abi;
//# sourceMappingURL=ERC20bytes32Capitals__factory.js.map