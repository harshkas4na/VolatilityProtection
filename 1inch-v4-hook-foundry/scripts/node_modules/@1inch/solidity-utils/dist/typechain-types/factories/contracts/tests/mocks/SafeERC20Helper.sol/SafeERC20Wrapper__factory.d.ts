import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type { SafeERC20Wrapper, SafeERC20WrapperInterface } from "../../../../../contracts/tests/mocks/SafeERC20Helper.sol/SafeERC20Wrapper";
type SafeERC20WrapperConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SafeERC20Wrapper__factory extends ContractFactory {
    constructor(...args: SafeERC20WrapperConstructorParams);
    getDeployTransaction(token: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(token: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<SafeERC20Wrapper & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): SafeERC20Wrapper__factory;
    static readonly bytecode = "0x60803461007357601f610eed38819003918201601f19168301916001600160401b038311848410176100775780849260209460405283398101031261007357516001600160a01b03811690819003610073575f80546001600160a01b031916919091179055604051610e61908161008c8239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60406080815260049081361015610014575f80fd5b5f9060e05f35811c9081630def978b14610b0157816310bad4cf146109d157816311e330b2146108685781633ba93f2614610785578163722713f7146106ea578163811c34d3146106985781638a4068dd146105bd578163b759f95414610567578163d505accf1461016f575063de242ff41461008f575f80fd5b3461016b57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261016b5760205f604473ffffffffffffffffffffffffffffffffffffffff85541695845196879384927fdd62ed3e0000000000000000000000000000000000000000000000000000000084528301525f60248301525afa9182156101605791610127575b6020925051908152f35b90506020823d602011610158575b8161014260209383610bfc565b8101031261015457602091519061011d565b5f80fd5b3d9150610135565b9051903d90823e3d90fd5b5080fd5b929190503461016b577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601928084126105635773ffffffffffffffffffffffffffffffffffffffff9085358281168103610154576024359280841684036101545760843560ff81160361055f578554169036881161055f5784519693846064146104ab5750836048146103ec57508260e0146103b057826101001461036f57826060146102a1575050610160146102485750507f68275857000000000000000000000000000000000000000000000000000000008152fd5b916101648161016084967f2b67b5700000000000000000000000000000000000000000000000000000000086955280830137826e22d473030f116ddee9f6b43ac78ba35af15b15610297575080f35b51903d90823e3d90fd5b6101649250906014859787937f2b67b57000000000000000000000000000000000000000000000000000000000889799523382860152602485015260508401377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff65ffffffffffff9181601835821c0183166064850152601c35811c60848501523060a4850152602035901c011660c482015261010060e4820152846101048201526020602461012483013760206044610144830137826e22d473030f116ddee9f6b43ac78ba35af161028e565b6101049250859150849690610100869597927f8fcbaf0c00000000000000000000000000000000000000000000000000000000879452808501375af161028e565b60e492508496908692869597927fd505accf00000000000000000000000000000000000000000000000000000000879452808501375af161028e565b6101049350907f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8698927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff899589989a957f8fcbaf0c000000000000000000000000000000000000000000000000000000008a97523390880152306024880152602c3592811c6044880152600835901c016064860152600160848601528060ff1c601b0160a48601526020600c60c48701371660e48401525af161028e565b60e49450869887969894879493507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff917fd505accf000000000000000000000000000000000000000000000000000000008852338489015230602489015260206048359460448a01371c0160648601528060ff1c601b0160848601526020602860a48701371660c48401525af161028e565b8580fd5b8280fd5b83853461016b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261016b576105ba903573ffffffffffffffffffffffffffffffffffffffff835416610d06565b80f35b8385843461056357827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105635773ffffffffffffffffffffffffffffffffffffffff83541660205f604484517fa9059cbb000000000000000000000000000000000000000000000000000000008152828782015282602482015282855af19081610676575b5015610650578280f35b517ffb7f5079000000000000000000000000000000000000000000000000000000008152fd5b90503d15610690575060015f5114601f3d11165b84610646565b3b151561068a565b83346106e757807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106e7576105ba73ffffffffffffffffffffffffffffffffffffffff825416610c6a565b80fd5b505082346105635782807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126106e7576024816020938173ffffffffffffffffffffffffffffffffffffffff815416917f70a08231000000000000000000000000000000000000000000000000000000008252525afa825191901560203d101761077a576020925051908152f35b51913d9150823e3d90fd5b838584346101545760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101545773ffffffffffffffffffffffffffffffffffffffff5f541691823b15610154575f809360248451809681937f3ba93f260000000000000000000000000000000000000000000000000000000083528635878401525af1801561085e5761081b578380f35b9091925067ffffffffffffffff8311610832575052005b6041907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b82513d5f823e3d90fd5b8483346101545760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015457813573ffffffffffffffffffffffffffffffffffffffff5f5416908251927fdd62ed3e0000000000000000000000000000000000000000000000000000000084526020848061090d3089830160205f9193929373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b0381865afa9384156109c7575f94610993575b508319821161096b5750820180921161093f5761093d9250610d06565b005b6011837f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b8490517f8216cd1c000000000000000000000000000000000000000000000000000000008152fd5b9093506020813d6020116109bf575b816109af60209383610bfc565b8101031261015457519285610920565b3d91506109a2565b50513d5f823e3d90fd5b8483346101545760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015457813573ffffffffffffffffffffffffffffffffffffffff5f5416908251927fdd62ed3e00000000000000000000000000000000000000000000000000000000845260208480610a763089830160205f9193929373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b0381865afa9384156109c7575f94610acd575b50838211610aa55750820391821161093f5761093d9250610d06565b8490517f840bdf26000000000000000000000000000000000000000000000000000000008152fd5b9093506020813d602011610af9575b81610ae960209383610bfc565b8101031261015457519285610a89565b3d9150610adc565b8483346101545760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101545781358015158103610154575f5473ffffffffffffffffffffffffffffffffffffffff169015610bf0578151907f36c785160000000000000000000000000000000000000000000000000000000082525f848301525f60248301525f604483015260648201525f8060846e22d473030f116ddee9f6b43ac78ba39382855af19081610be5575b5015610bbf57005b517ff4059071000000000000000000000000000000000000000000000000000000008152fd5b90503b151583610bb7565b905061093d9150610c6a565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610c3d57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b60205f60646040517f23b872dd00000000000000000000000000000000000000000000000000000000815282600482015282602482015282604482015282855af19081610ce4575b5015610cba57565b60046040517ff4059071000000000000000000000000000000000000000000000000000000008152fd5b90503d15610cfe575060015f5114601f3d11165b5f610cb2565b3b1515610cf8565b90610d118183610dc7565b15610d1a575050565b60205f60446040517f095ea7b300000000000000000000000000000000000000000000000000000000815282600482015282602482015282865af180610da8575b15918215610d96575b5050610d6c57565b60046040517f19be9a90000000000000000000000000000000000000000000000000000000008152fd5b610da09250610dc7565b155f80610d64565b503d15610dbe5760015f5114601f3d1116610d5b565b813b1515610d5b565b91905f6044602092604051907f095ea7b3000000000000000000000000000000000000000000000000000000008252836004830152602482015282865af19182610e0e5750565b9091503d15610e25575060015f5114601f3d111690565b3b15159056fea264697066735822122050e65e36a08e792eb06c778876596c7fc435cc888bc264f134b9b9ed350c45eb64736f6c63430008170033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IERC20";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "ForceApproveFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Permit2TransferAmountTooHigh";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SafeDecreaseAllowanceFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SafeIncreaseAllowanceFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SafeTransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "SafeTransferFromFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "allowance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "decreaseAllowance";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "increaseAllowance";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "permit";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "allowance_";
            readonly type: "uint256";
        }];
        readonly name: "setAllowance";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "transfer";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bool";
            readonly name: "permit2";
            readonly type: "bool";
        }];
        readonly name: "transferFromUniversal";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): SafeERC20WrapperInterface;
    static connect(address: string, runner?: ContractRunner | null): SafeERC20Wrapper;
}
export {};
