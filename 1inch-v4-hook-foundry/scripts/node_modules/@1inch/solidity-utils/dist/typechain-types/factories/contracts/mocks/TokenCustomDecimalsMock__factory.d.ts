import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, BigNumberish, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { TokenCustomDecimalsMock, TokenCustomDecimalsMockInterface } from "../../../contracts/mocks/TokenCustomDecimalsMock";
type TokenCustomDecimalsMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TokenCustomDecimalsMock__factory extends ContractFactory {
    constructor(...args: TokenCustomDecimalsMockConstructorParams);
    getDeployTransaction(name: string, symbol: string, amount: BigNumberish, decimals_: BigNumberish, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(name: string, symbol: string, amount: BigNumberish, decimals_: BigNumberish, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<TokenCustomDecimalsMock & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): TokenCustomDecimalsMock__factory;
    static readonly bytecode = "0x610180604081815234620004ec57620020418038038091620000228286620004f0565b84398201608083820312620004ec5782516001600160401b039290838111620004ec57826200005391860162000537565b906020928386015190858211620004ec576200007191870162000537565b946060828201519101519360ff85168503620004ec57825196838801888110888211176200040057845260019687895282890197603160f81b89528651828111620004005760038054918383811c93168015620004e1575b87841014620004cd57601f9283811162000485575b50808784821160011462000420575f9162000414575b505f1982841b1c191690841b1781555b845191848311620004005760049586548581811c91168015620003f5575b89821014620003e2578281116200039a575b508791841160011462000333579383949184925f9562000327575b50501b925f19911b1c19161782555b620001698662000592565b976101209889526200017b8a6200072d565b96610140978852848151910120998a60e05251902061010099818b524660a052865191858301917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83528884015260608301524660808301523060a083015260a0825260c0820192828410908411176200031457828752815190206080523060c0523315620002fe57505060088054336001600160a01b0319821681179092556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a360025490838201809211620002eb57505f917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9160025533835282815284832084815401905584519384523393a361016092835251926117c594856200087c86396080518561120e015260a051856112da015260c051856111df015260e0518561125d015251846112830152518361077f015251826107a901525181610bd50152f35b601190634e487b7160e01b5f525260245ffd5b631e4fbdf760e01b82525f60c490910152602490fd5b604184634e487b7160e01b5f525260245ffd5b015193505f806200014f565b9190601f19841692875f5284895f20945f5b8b8983831062000382575050501062000368575b50505050811b0182556200015e565b01519060f8845f19921b161c191690555f80808062000359565b86860151895590970196948501948893500162000345565b875f52885f208380870160051c8201928b8810620003d8575b0160051c019086905b828110620003cc57505062000134565b5f8155018690620003bc565b92508192620003b3565b602288634e487b7160e01b5f525260245ffd5b90607f169062000122565b634e487b7160e01b5f52604160045260245ffd5b90508a01515f620000f4565b5f8481528981208794509190601f198416908b8f5b8383106200046d57505050831162000455575b5050811b01815562000104565b8c01515f1983861b60f8161c191690555f8062000448565b840151855589969094019392830192018b8f62000435565b825f52875f208480840160051c8201928a8510620004c3575b0160051c019085905b828110620004b7575050620000de565b5f8155018590620004a7565b925081926200049e565b634e487b7160e01b5f52602260045260245ffd5b92607f1692620000c9565b5f80fd5b601f909101601f19168101906001600160401b038211908210176200040057604052565b5f5b838110620005265750505f910152565b818101518382015260200162000516565b81601f82011215620004ec5780516001600160401b0381116200040057604051926200056e601f8301601f191660200185620004f0565b81845260208284010111620004ec576200058f916020808501910162000514565b90565b8051602091908281101562000611575090601f825111620005cf5780825192015190808310620005c157501790565b825f19910360031b1b161790565b604490620006039260405193849263305a27a960e01b84528060048501528251928391826024870152868601910162000514565b601f01601f19168101030190fd5b6001600160401b03811162000400576005928354926001938481811c9116801562000722575b83821014620004cd57601f8111620006ee575b5081601f84116001146200068857509282939183925f946200067c575b50501b915f199060031b1c191617905560ff90565b015192505f8062000667565b919083601f198116875f52845f20945f905b88838310620006d35750505010620006ba575b505050811b01905560ff90565b01515f1960f88460031b161c191690555f8080620006ad565b8587015188559096019594850194879350908101906200069a565b855f5284601f845f209201871c820191601f8601881c015b828110620007165750506200064a565b5f815501859062000706565b90607f169062000637565b8051602090818110156200075a5750601f825111620005cf5780825192015190808310620005c157501790565b906001600160401b0382116200040057600654926001938481811c9116801562000870575b83821014620004cd57601f811162000839575b5081601f8411600114620007d157509282939183925f94620007c5575b50501b915f199060031b1c19161760065560ff90565b015192505f80620007af565b919083601f19811660065f52845f20945f905b888383106200081e575050501062000805575b505050811b0160065560ff90565b01515f1960f88460031b161c191690555f8080620007f7565b858701518855909601959485019487935090810190620007e4565b60065f5284601f845f20920160051c820191601f860160051c015b8281106200086457505062000792565b5f815501859062000854565b90607f16906200077f56fe608060409080825260049081361015610016575f80fd5b5f3560e01c90816306fdde0314610e0357508063095ea7b314610dbc57806318160ddd14610d8057806323b872dd14610bf9578063313ce56714610b9e5780633408e47014610b665780633644e51514610b2557806340c10f1914610a1a57806370a08231146109b9578063715018a61461091d5780637ecebe00146108bb57806384b0196e1461074b5780638da5cb5b146106f957806395d89b41146105d25780639dc29fac1461048b578063a9059cbb1461043d578063d505accf1461024c578063dd62ed3e146101d75763f2fde38b146100f1575f80fd5b346101d35760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d357610128610f6a565b90610131611300565b73ffffffffffffffffffffffffffffffffffffffff8092169283156101a4575050600854827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600855167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b905f60249251917f1e4fbdf7000000000000000000000000000000000000000000000000000000008352820152fd5b5f80fd5b82346101d357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d357602090610211610f6a565b610219610f8d565b9073ffffffffffffffffffffffffffffffffffffffff8091165f5260018452825f2091165f528252805f20549051908152f35b50346101d35760e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d357610284610f6a565b61028c610f8d565b906044359260643560843560ff811681036101d35781421161040e5773ffffffffffffffffffffffffffffffffffffffff9081851692835f526007602052885f209081549160018301905589519060208201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98452868c840152858a1660608401528a608084015260a083015260c082015260c0815260e0810181811067ffffffffffffffff8211176103e2578a52519020610399916103909161034f6111c8565b908b51917f190100000000000000000000000000000000000000000000000000000000000083526002830152602282015260c43591604260a4359220611610565b909291926116aa565b168181036103ae576103ac868686611351565b005b604493508651927f4b800e460000000000000000000000000000000000000000000000000000000084528301526024820152fd5b6041877f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b602483838951917f62791302000000000000000000000000000000000000000000000000000000008352820152fd5b82346101d357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d35760209061048461047a610f6a565b602435903361108b565b5160018152f35b5090346101d357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d3576104c3610f6a565b90602435926104d0611300565b73ffffffffffffffffffffffffffffffffffffffff83169283156105a357835f525f602052825f205491858310610544575f857fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020898881898688528785520381872055816002540360025551908152a3005b61059f868486519485947fe450d38c000000000000000000000000000000000000000000000000000000008652850160409194939273ffffffffffffffffffffffffffffffffffffffff606083019616825260208201520152565b0390fd5b505f60249251917f96c6fd1e000000000000000000000000000000000000000000000000000000008352820152fd5b50346101d3575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d357815191825f835461061181610fb0565b90818452602095600191876001821691825f146106b4575050600114610658575b505050610654929161064591038561104a565b51928284938452830190610f0e565b0390f35b5f90815286935091907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061069c5750505082010181610645610654610632565b8054848a018601528895508794909301928101610683565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168782015293151560051b8601909301935084925061064591506106549050610632565b82346101d3575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d35760209073ffffffffffffffffffffffffffffffffffffffff600854169051908152f35b50346101d3575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d3576107a37f000000000000000000000000000000000000000000000000000000000000000061141b565b916107cd7f0000000000000000000000000000000000000000000000000000000000000000611553565b815191602091602084019484861067ffffffffffffffff87111761088f5750610844826020928761083799989795525f855281519889987f0f000000000000000000000000000000000000000000000000000000000000008a5260e0868b015260e08a0190610f0e565b9188830390890152610f0e565b914660608701523060808701525f60a087015285830360c087015251918281520192915f5b82811061087857505050500390f35b835185528695509381019392810192600101610869565b6041907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b82346101d35760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d35760209073ffffffffffffffffffffffffffffffffffffffff61090b610f6a565b165f5260078252805f20549051908152f35b346101d3575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d357610953611300565b5f73ffffffffffffffffffffffffffffffffffffffff6008547fffffffffffffffffffffffff00000000000000000000000000000000000000008116600855167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b82346101d35760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d35760209073ffffffffffffffffffffffffffffffffffffffff610a09610f6a565b165f525f8252805f20549051908152f35b5090346101d357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d357610a52610f6a565b9073ffffffffffffffffffffffffffffffffffffffff60243592610a74611300565b16928315610af75760025490838201809211610acb57505f927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9260209260025585855284835280852082815401905551908152a3005b6011907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b5f60249251917fec442f05000000000000000000000000000000000000000000000000000000008352820152fd5b82346101d3575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d357602090610b5f6111c8565b9051908152f35b82346101d3575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d35760209051468152f35b82346101d3575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d3576020905160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346101d35760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d357610c31610f6a565b610c39610f8d565b906044359273ffffffffffffffffffffffffffffffffffffffff8216805f526001602052855f20335f52602052855f2054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8303610ca1575b60208761048488888861108b565b858310610d3b578115610d0c573315610cdd57505f90815260016020908152868220338352815290869020918590039091558290610484610c93565b6024905f8851917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024905f8851917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b86517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018690528291506060010390fd5b82346101d3575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d3576020906002549051908152f35b82346101d357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d357602090610484610df9610f6a565b6024359033611351565b83346101d3575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101d35760035490825f610e4184610fb0565b808352602094600190866001821691825f14610ece575050600114610e73575b5050610654929161064591038561104a565b9085925060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915f925b828410610eb65750505082010181610645610e61565b8054848a018601528895508794909301928101610ea0565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168682015292151560051b850190920192508391506106459050610e61565b91908251928382525f5b848110610f565750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f845f6020809697860101520116010190565b602081830181015184830182015201610f18565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036101d357565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036101d357565b90600182811c92168015610ff7575b6020831014610fca57565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f1691610fbf565b6040810190811067ffffffffffffffff82111761101d57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761101d57604052565b9173ffffffffffffffffffffffffffffffffffffffff808416928315611198571692831561116857825f525f60205260405f2054908282106111105750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019190915260448101829052606490fd5b60246040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152fd5b60246040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163014806112d7575b15611230577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff82111761101d5760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611207565b73ffffffffffffffffffffffffffffffffffffffff60085416330361132157565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b73ffffffffffffffffffffffffffffffffffffffff8091169182156113eb57169182156113bb5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591835f526001825260405f20855f5282528060405f2055604051908152a3565b60246040517f94280d620000000000000000000000000000000000000000000000000000000081525f6004820152fd5b60246040517fe602df050000000000000000000000000000000000000000000000000000000081525f6004820152fd5b60ff81146114715760ff811690601f8211611447576040519161143d83611001565b8252602082015290565b60046040517fb3512b0c000000000000000000000000000000000000000000000000000000008152fd5b50604051600554815f61148383610fb0565b8083529260209060019081811690811561151057506001146114b1575b50506114ae9250038261104a565b90565b91509260055f527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0935f925b8284106114f857506114ae9450505081016020015f806114a0565b855487850183015294850194869450928101926114dd565b9050602093506114ae9592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201015f806114a0565b60ff81146115755760ff811690601f8211611447576040519161143d83611001565b50604051600654815f61158783610fb0565b8083529260209060019081811690811561151057506001146115b15750506114ae9250038261104a565b91509260065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f935f925b8284106115f857506114ae9450505081016020015f806114a0565b855487850183015294850194869450928101926115dd565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841161169f579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15611694575f5173ffffffffffffffffffffffffffffffffffffffff81161561168a57905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b600481101561176257806116bc575050565b600181036116ee5760046040517ff645eedf000000000000000000000000000000000000000000000000000000008152fd5b6002810361172757602482604051907ffce698f70000000000000000000000000000000000000000000000000000000082526004820152fd5b6003146117315750565b602490604051907fd78bce0c0000000000000000000000000000000000000000000000000000000082526004820152fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea264697066735822122022787640fa3ee8d358009f2ede2e1d925a940e46114e01a9a817adae57af44a864736f6c63430008170033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "symbol";
            readonly type: "string";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint8";
            readonly name: "decimals_";
            readonly type: "uint8";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "ECDSAInvalidSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "length";
            readonly type: "uint256";
        }];
        readonly name: "ECDSAInvalidSignatureLength";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "ECDSAInvalidSignatureS";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "allowance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "needed";
            readonly type: "uint256";
        }];
        readonly name: "ERC20InsufficientAllowance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "needed";
            readonly type: "uint256";
        }];
        readonly name: "ERC20InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "approver";
            readonly type: "address";
        }];
        readonly name: "ERC20InvalidApprover";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }];
        readonly name: "ERC20InvalidReceiver";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "ERC20InvalidSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }];
        readonly name: "ERC20InvalidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "deadline";
            readonly type: "uint256";
        }];
        readonly name: "ERC2612ExpiredSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "ERC2612InvalidSigner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "currentNonce";
            readonly type: "uint256";
        }];
        readonly name: "InvalidAccountNonce";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidShortString";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "OwnableInvalidOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "OwnableUnauthorizedAccount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "str";
            readonly type: "string";
        }];
        readonly name: "StringTooLong";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [];
        readonly name: "EIP712DomainChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "DOMAIN_SEPARATOR";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }];
        readonly name: "allowance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "burn";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "decimals";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "eip712Domain";
        readonly outputs: readonly [{
            readonly internalType: "bytes1";
            readonly name: "fields";
            readonly type: "bytes1";
        }, {
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "version";
            readonly type: "string";
        }, {
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "verifyingContract";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "salt";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "extensions";
            readonly type: "uint256[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getChainId";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "mint";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "nonces";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "deadline";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "permit";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "totalSupply";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "transfer";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): TokenCustomDecimalsMockInterface;
    static connect(address: string, runner?: ContractRunner | null): TokenCustomDecimalsMock;
}
export {};
