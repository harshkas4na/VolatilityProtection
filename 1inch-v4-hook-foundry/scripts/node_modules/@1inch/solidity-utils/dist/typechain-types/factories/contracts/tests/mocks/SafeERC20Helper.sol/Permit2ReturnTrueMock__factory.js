"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Permit2ReturnTrueMock__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "uint160",
                name: "",
                type: "uint160",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "transferFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608080604052346100155760c6908161001a8239f35b5f80fdfe6004361015600b575f80fd5b5f3560e01c6336c7851614601d575f80fd5b34608c5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112608c5773ffffffffffffffffffffffffffffffffffffffff60043581811603608c5760243581811603608c5760443581811603608c5760643590811603608c575f8055005b5f80fdfea264697066735822122054d52eaab1962e5c499e3320154202a4c43066070569201c9f8b72923308af6d64736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class Permit2ReturnTrueMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.Permit2ReturnTrueMock__factory = Permit2ReturnTrueMock__factory;
Permit2ReturnTrueMock__factory.bytecode = _bytecode;
Permit2ReturnTrueMock__factory.abi = _abi;
//# sourceMappingURL=Permit2ReturnTrueMock__factory.js.map