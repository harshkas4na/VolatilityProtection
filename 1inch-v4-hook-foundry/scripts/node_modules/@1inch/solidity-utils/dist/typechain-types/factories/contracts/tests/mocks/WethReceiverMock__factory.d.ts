import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type { WethReceiverMock, WethReceiverMockInterface } from "../../../../contracts/tests/mocks/WethReceiverMock";
type WethReceiverMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class WethReceiverMock__factory extends ContractFactory {
    constructor(...args: WethReceiverMockConstructorParams);
    getDeployTransaction(weth: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(weth: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<WethReceiverMock & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): WethReceiverMock__factory;
    static readonly bytecode = "0x60a03461006857601f61012b38819003918201601f19168301916001600160401b0383118484101761006c5780849260209460405283398101031261006857516001600160a01b03811681036100685760805260405160aa908161008182396080518160250152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040523615600e575f80fd5b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163303604c57005b807f1b10b0f90000000000000000000000000000000000000000000000000000000060049252fdfea2646970667358221220699d3e3f1ff915e36939643449c4a9296f480660227ec57b4ffcc14da0364f3564736f6c63430008170033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "weth";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "EthDepositRejected";
        readonly type: "error";
    }, {
        readonly stateMutability: "payable";
        readonly type: "receive";
    }];
    static createInterface(): WethReceiverMockInterface;
    static connect(address: string, runner?: ContractRunner | null): WethReceiverMock;
}
export {};
