import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, BigNumberish, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../../../common";
import type { DaiLikePermitMock, DaiLikePermitMockInterface } from "../../../../contracts/tests/mocks/DaiLikePermitMock";
type DaiLikePermitMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DaiLikePermitMock__factory extends ContractFactory {
    constructor(...args: DaiLikePermitMockConstructorParams);
    getDeployTransaction(name: string, symbol: string, initialAccount: AddressLike, initialBalance: BigNumberish, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(name: string, symbol: string, initialAccount: AddressLike, initialBalance: BigNumberish, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<DaiLikePermitMock & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): DaiLikePermitMock__factory;
    static readonly bytecode = "0x610160604081815262001fc480380380916200001c8286620004ad565b8439820191608081840312620004a95780516001600160401b039290838111620004a957846200004e918401620004f4565b916020948582015190858211620004a9576200006c918301620004f4565b8183015190956001600160a01b038216929091839003620004a9576060015183519684880188811088821117620003b357855260019687895283890197603160f81b89528751828111620003b35760038054918383811c931680156200049e575b888410146200048a57601f9283811162000442575b508088848211600114620003d3575f91620003c7575b505f1982841b1c191690841b1781555b845191848311620003b35760049586548581811c91168015620003a8575b8a82101462000395578281116200034d575b5088918411600114620002e6579383949184925f95620002da575b50501b925f19911b1c19161782555b6200016d876200054f565b976101209889526200017f8a620006ea565b97610140988952858151910120998a60e05251902061010099818b524660a052875191868301917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83528984015260608301524660808301523060a083015260a0825260c082019282841090841117620002c757828852815190206080523060c0528515620002b1575050600254908282018092116200029e57506002555f8381528083528481208054830190558451918252917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a3519161178b938462000839853960805184611213015260a051846112df015260c051846111e4015260e0518461126201525183611288015251826109100152518161093a0152f35b601190634e487b7160e01b5f525260245ffd5b63ec442f0560e01b82525f60c490910152602490fd5b604184634e487b7160e01b5f525260245ffd5b015193505f8062000153565b9190601f19841692875f52848a5f20945f5b8c898383106200033557505050106200031b575b50505050811b01825562000162565b01519060f8845f19921b161c191690555f8080806200030c565b868601518955909701969485019488935001620002f8565b875f52895f208380870160051c8201928c88106200038b575b0160051c019086905b8281106200037f57505062000138565b5f81550186906200036f565b9250819262000366565b602288634e487b7160e01b5f525260245ffd5b90607f169062000126565b634e487b7160e01b5f52604160045260245ffd5b90508b01515f620000f8565b8592508c90601f198316855f528b5f20928c5f915b8383106200042057505050831162000408575b5050811b01815562000108565b8d01515f1983861b60f8161c191690555f80620003fb565b948482949597989293960151815501940192019087949392918f8d90620003e8565b825f52885f208480840160051c8201928b851062000480575b0160051c019085905b82811062000474575050620000e2565b5f815501859062000464565b925081926200045b565b634e487b7160e01b5f52602260045260245ffd5b92607f1692620000cd565b5f80fd5b601f909101601f19168101906001600160401b03821190821017620003b357604052565b5f5b838110620004e35750505f910152565b8181015183820152602001620004d3565b81601f82011215620004a95780516001600160401b038111620003b357604051926200052b601f8301601f191660200185620004ad565b81845260208284010111620004a9576200054c9160208085019101620004d1565b90565b80516020919082811015620005ce575090601f8251116200058c57808251920151908083106200057e57501790565b825f19910360031b1b161790565b604490620005c09260405193849263305a27a960e01b845280600485015282519283918260248701528686019101620004d1565b601f01601f19168101030190fd5b6001600160401b038111620003b3576005928354926001938481811c91168015620006df575b838210146200048a57601f8111620006ab575b5081601f84116001146200064557509282939183925f9462000639575b50501b915f199060031b1c191617905560ff90565b015192505f8062000624565b919083601f198116875f52845f20945f905b8883831062000690575050501062000677575b505050811b01905560ff90565b01515f1960f88460031b161c191690555f80806200066a565b85870151885590960195948501948793509081019062000657565b855f5284601f845f209201871c820191601f8601881c015b828110620006d357505062000607565b5f8155018590620006c3565b90607f1690620005f4565b805160209081811015620007175750601f8251116200058c57808251920151908083106200057e57501790565b906001600160401b038211620003b357600654926001938481811c911680156200082d575b838210146200048a57601f8111620007f6575b5081601f84116001146200078e57509282939183925f9462000782575b50501b915f199060031b1c19161760065560ff90565b015192505f806200076c565b919083601f19811660065f52845f20945f905b88838310620007db5750505010620007c2575b505050811b0160065560ff90565b01515f1960f88460031b161c191690555f8080620007b4565b858701518855909601959485019487935090810190620007a1565b60065f5284601f845f20920160051c820191601f860160051c015b828110620008215750506200074f565b5f815501859062000811565b90607f16906200073c56fe6080604090808252600480361015610015575f80fd5b5f3560e01c91826306fdde0314610dec57508163095ea7b314610da557816318160ddd14610d6957816323b872dd14610be157816330adf81f14610b89578163313ce56714610b505781633644e51514610b0f57816370a0823114610aae5781637ecebe0014610a4c57816384b0196e146108db5781638fcbaf0c1461048557816395d89b411461035d578163a9059cbb1461030f578163d505accf1461013d575063dd62ed3e146100c5575f80fd5b3461013957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610139576020906100fe610f53565b610106610f76565b9073ffffffffffffffffffffffffffffffffffffffff8091165f5260018452825f2091165f528252805f20549051908152f35b5f80fd5b9050346101395760e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013957610176610f53565b61017e610f76565b906044359260643560843560ff81168103610139578142116102e0579061029761028e88936101d48773ffffffffffffffffffffffffffffffffffffffff165f52600760205260405f2080549060018201905590565b93855160208101917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9835273ffffffffffffffffffffffffffffffffffffffff96878b168099840152878c1660608401528c608084015260a083015260c082015260c0815261024281610fea565b51902061024d6111cd565b908b51917f190100000000000000000000000000000000000000000000000000000000000083526002830152602282015260c43591604260a43592206115c4565b90929192611670565b168181036102ac576102aa868686611305565b005b604493508651927f4b800e460000000000000000000000000000000000000000000000000000000084528301526024820152fd5b602483838951917f62791302000000000000000000000000000000000000000000000000000000008352820152fd5b823461013957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101395760209061035661034c610f53565b6024359033611090565b5160018152f35b905034610139575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013957815191825f835461039d81610f99565b90818452602095600191876001821691825f146104405750506001146103e4575b5050506103e092916103d191038561104f565b51928284938452830190610ef7565b0390f35b5f90815286935091907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061042857505050820101816103d16103e06103be565b8054848a01860152889550879490930192810161040f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168782015293151560051b860190930193508492506103d191506103e090506103be565b8234610139576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610139576104be610f53565b6104c6610f76565b6044359260643592608435801515968782036101395760a4359660ff88168803610139578451967f3644e51500000000000000000000000000000000000000000000000000000000885260209788818581305afa9081156108d1575f916108a4575b50865199898b01917fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb835273ffffffffffffffffffffffffffffffffffffffff928389169c8d8b820152848c169e8f60608301528760808301528660a083015260c082015260c0815261059a81610fea565b519020908951918c8301917f190100000000000000000000000000000000000000000000000000000000000083526022840152604283015260428252608082019082821067ffffffffffffffff83111761087857818b5282519020918d1561081d575050885190815260ff91909116602082015260c435604082015260e43560608201525f8080528a9160809060015afa15610813575f511689036107b75780159081156107ac575b501561075057875f5260078752845f2054036106f45750816106d6916106b47f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259796959473ffffffffffffffffffffffffffffffffffffffff165f52600760205260405f2080549060018201905590565b50156106dd576fffffffffffffffffffffffffffffffff805b16938491611305565b51908152a3005b6fffffffffffffffffffffffffffffffff5f6106cd565b606490868551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601160248201527f4461692f696e76616c69642d6e6f6e63650000000000000000000000000000006044820152fd5b606482888751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601260248201527f4461692f7065726d69742d6578706972656400000000000000000000000000006044820152fd5b90504211158a610643565b606483898851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601260248201527f4461692f696e76616c69642d7065726d697400000000000000000000000000006044820152fd5b86513d5f823e3d90fd5b907f4461692f696e76616c69642d616464726573732d30000000000000000000000060c46064938f7f08c379a00000000000000000000000000000000000000000000000000000000085526084820152601560a48201520152fd5b6041887f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b90508881813d83116108ca575b6108bb818361104f565b8101031261013957518b610528565b503d6108b1565b87513d5f823e3d90fd5b905034610139575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610139576109347f00000000000000000000000000000000000000000000000000000000000000006113cf565b9161095e7f0000000000000000000000000000000000000000000000000000000000000000611507565b815191602091602084019484861067ffffffffffffffff871117610a2057506109d582602092876109c899989795525f855281519889987f0f000000000000000000000000000000000000000000000000000000000000008a5260e0868b015260e08a0190610ef7565b9188830390890152610ef7565b914660608701523060808701525f60a087015285830360c087015251918281520192915f5b828110610a0957505050500390f35b8351855286955093810193928101926001016109fa565b6041907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b82346101395760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101395760209073ffffffffffffffffffffffffffffffffffffffff610a9c610f53565b165f5260078252805f20549051908152f35b82346101395760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101395760209073ffffffffffffffffffffffffffffffffffffffff610afe610f53565b165f525f8252805f20549051908152f35b8234610139575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013957602090610b496111cd565b9051908152f35b8234610139575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610139576020905160128152f35b8234610139575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013957602090517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb8152f35b9050346101395760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013957610c1a610f53565b610c22610f76565b906044359273ffffffffffffffffffffffffffffffffffffffff8216805f526001602052855f20335f52602052855f2054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8303610c8a575b602087610356888888611090565b858310610d24578115610cf5573315610cc657505f90815260016020908152868220338352815290869020918590039091558290610356610c7c565b6024905f8851917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024905f8851917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b86517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018690528291506060010390fd5b8234610139575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610139576020906002549051908152f35b823461013957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013957602090610356610de2610f53565b6024359033611305565b8334610139575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101395760035490825f610e2a84610f99565b808352602094600190866001821691825f14610eb7575050600114610e5c575b50506103e092916103d191038561104f565b9085925060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915f925b828410610e9f57505050820101816103d1610e4a565b8054848a018601528895508794909301928101610e89565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168682015292151560051b850190920192508391506103d19050610e4a565b91908251928382525f5b848110610f3f5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f845f6020809697860101520116010190565b602081830181015184830182015201610f01565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361013957565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361013957565b90600182811c92168015610fe0575b6020831014610fb357565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f1691610fa8565b60e0810190811067ffffffffffffffff82111761100657604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040810190811067ffffffffffffffff82111761100657604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761100657604052565b9173ffffffffffffffffffffffffffffffffffffffff80841692831561119d571692831561116d57825f525f60205260405f2054908282106111155750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019190915260448101829052606490fd5b60246040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152fd5b60246040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163014806112dc575b15611235577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff8211176110065760405251902090565b507f0000000000000000000000000000000000000000000000000000000000000000461461120c565b73ffffffffffffffffffffffffffffffffffffffff80911691821561139f571691821561136f5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591835f526001825260405f20855f5282528060405f2055604051908152a3565b60246040517f94280d620000000000000000000000000000000000000000000000000000000081525f6004820152fd5b60246040517fe602df050000000000000000000000000000000000000000000000000000000081525f6004820152fd5b60ff81146114255760ff811690601f82116113fb57604051916113f183611033565b8252602082015290565b60046040517fb3512b0c000000000000000000000000000000000000000000000000000000008152fd5b50604051600554815f61143783610f99565b808352926020906001908181169081156114c45750600114611465575b50506114629250038261104f565b90565b91509260055f527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0935f925b8284106114ac57506114629450505081016020015f80611454565b85548785018301529485019486945092810192611491565b9050602093506114629592507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201015f80611454565b60ff81146115295760ff811690601f82116113fb57604051916113f183611033565b50604051600654815f61153b83610f99565b808352926020906001908181169081156114c457506001146115655750506114629250038261104f565b91509260065f527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f935f925b8284106115ac57506114629450505081016020015f80611454565b85548785018301529485019486945092810192611591565b90917f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411611665579061161d6020945f9493604051948594859094939260ff6060936080840197845216602083015260408201520152565b838052039060015afa1561165a575f5173ffffffffffffffffffffffffffffffffffffffff81161561165057905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f9160039190565b60048110156117285780611682575050565b600181036116b45760046040517ff645eedf000000000000000000000000000000000000000000000000000000008152fd5b600281036116ed57602482604051907ffce698f70000000000000000000000000000000000000000000000000000000082526004820152fd5b6003146116f75750565b602490604051907fd78bce0c0000000000000000000000000000000000000000000000000000000082526004820152fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220f9b9c7435bfc5454d2dd28493e12746c5b9a17e2d414e859447058ac19abf80464736f6c63430008170033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "symbol";
            readonly type: "string";
        }, {
            readonly internalType: "address";
            readonly name: "initialAccount";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "initialBalance";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "ECDSAInvalidSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "length";
            readonly type: "uint256";
        }];
        readonly name: "ECDSAInvalidSignatureLength";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "ECDSAInvalidSignatureS";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "allowance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "needed";
            readonly type: "uint256";
        }];
        readonly name: "ERC20InsufficientAllowance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "needed";
            readonly type: "uint256";
        }];
        readonly name: "ERC20InsufficientBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "approver";
            readonly type: "address";
        }];
        readonly name: "ERC20InvalidApprover";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }];
        readonly name: "ERC20InvalidReceiver";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }];
        readonly name: "ERC20InvalidSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }];
        readonly name: "ERC20InvalidSpender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "deadline";
            readonly type: "uint256";
        }];
        readonly name: "ERC2612ExpiredSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "ERC2612InvalidSigner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "currentNonce";
            readonly type: "uint256";
        }];
        readonly name: "InvalidAccountNonce";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidShortString";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "str";
            readonly type: "string";
        }];
        readonly name: "StringTooLong";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [];
        readonly name: "EIP712DomainChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "DOMAIN_SEPARATOR";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "PERMIT_TYPEHASH";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }];
        readonly name: "allowance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "decimals";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "eip712Domain";
        readonly outputs: readonly [{
            readonly internalType: "bytes1";
            readonly name: "fields";
            readonly type: "bytes1";
        }, {
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "version";
            readonly type: "string";
        }, {
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "verifyingContract";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "salt";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "extensions";
            readonly type: "uint256[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "nonces";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "holder";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "expiry";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "allowed";
            readonly type: "bool";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "permit";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "deadline";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint8";
            readonly name: "v";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes32";
            readonly name: "r";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "permit";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "totalSupply";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "transfer";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "value";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): DaiLikePermitMockInterface;
    static connect(address: string, runner?: ContractRunner | null): DaiLikePermitMock;
}
export {};
