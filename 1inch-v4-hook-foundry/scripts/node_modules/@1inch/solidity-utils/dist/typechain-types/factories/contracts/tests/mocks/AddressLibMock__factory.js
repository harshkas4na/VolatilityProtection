"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressLibMock__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "Address",
                name: "a",
                type: "uint256",
            },
        ],
        name: "get",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Address",
                name: "a",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "flag",
                type: "uint256",
            },
        ],
        name: "getFlag",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Address",
                name: "a",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "offset",
                type: "uint256",
            },
        ],
        name: "getUint32",
        outputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "Address",
                name: "a",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "offset",
                type: "uint256",
            },
        ],
        name: "getUint64",
        outputs: [
            {
                internalType: "uint64",
                name: "",
                type: "uint64",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608080604052346100165761015a908161001b8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c9081639507d39a146100a157508063d3becb071461008c578063dab82ecd146100675763fc25803114610048575f80fd5b34610063576020610058366100f0565b604051911615158152f35b5f80fd5b3461006357602067ffffffffffffffff610080366100f0565b9190604051921c168152f35b3461006357602063ffffffff610080366100f0565b346100635760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100635760209073ffffffffffffffffffffffffffffffffffffffff600435168152f35b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc604091011261006357600435906024359056fea2646970667358221220259c2b482da5bfd055ded277c99f2ebb313c073724390594bb2b33e5645c483264736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class AddressLibMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.AddressLibMock__factory = AddressLibMock__factory;
AddressLibMock__factory.bytecode = _bytecode;
AddressLibMock__factory.abi = _abi;
//# sourceMappingURL=AddressLibMock__factory.js.map