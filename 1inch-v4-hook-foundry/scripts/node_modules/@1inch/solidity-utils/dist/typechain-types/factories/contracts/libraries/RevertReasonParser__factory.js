"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RevertReasonParser__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "InvalidRevertReason",
        type: "error",
    },
];
const _bytecode = "0x6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220c8f5fc12402dd2d87982929a78ee0025c030e8e84bc0ed8846b561f6bd1b239264736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class RevertReasonParser__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.RevertReasonParser__factory = RevertReasonParser__factory;
RevertReasonParser__factory.bytecode = _bytecode;
RevertReasonParser__factory.abi = _abi;
//# sourceMappingURL=RevertReasonParser__factory.js.map