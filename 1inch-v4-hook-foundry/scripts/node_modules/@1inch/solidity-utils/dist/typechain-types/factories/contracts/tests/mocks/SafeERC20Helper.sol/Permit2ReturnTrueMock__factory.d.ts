import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type { Permit2ReturnTrueMock, Permit2ReturnTrueMockInterface } from "../../../../../contracts/tests/mocks/SafeERC20Helper.sol/Permit2ReturnTrueMock";
type Permit2ReturnTrueMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Permit2ReturnTrueMock__factory extends ContractFactory {
    constructor(...args: Permit2ReturnTrueMockConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<Permit2ReturnTrueMock & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): Permit2ReturnTrueMock__factory;
    static readonly bytecode = "0x608080604052346100155760c6908161001a8239f35b5f80fdfe6004361015600b575f80fd5b5f3560e01c6336c7851614601d575f80fd5b34608c5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112608c5773ffffffffffffffffffffffffffffffffffffffff60043581811603608c5760243581811603608c5760443581811603608c5760643590811603608c575f8055005b5f80fdfea264697066735822122054d52eaab1962e5c499e3320154202a4c43066070569201c9f8b72923308af6d64736f6c63430008170033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "uint160";
            readonly name: "";
            readonly type: "uint160";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): Permit2ReturnTrueMockInterface;
    static connect(address: string, runner?: ContractRunner | null): Permit2ReturnTrueMock;
}
export {};
