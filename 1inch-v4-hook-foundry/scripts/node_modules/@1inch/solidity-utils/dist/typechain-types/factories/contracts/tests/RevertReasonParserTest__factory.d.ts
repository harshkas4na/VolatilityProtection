import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { RevertReasonParserTest, RevertReasonParserTestInterface } from "../../../contracts/tests/RevertReasonParserTest";
type RevertReasonParserTestConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class RevertReasonParserTest__factory extends ContractFactory {
    constructor(...args: RevertReasonParserTestConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<RevertReasonParserTest & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): RevertReasonParserTest__factory;
    static readonly bytecode = "0x60808060405234610016576114f4908161001b8239f35b5f80fdfe60806040818152600480361015610014575f80fd5b5f925f3560e01c90816325ebc41514610c4b57508063287bc8ee14610b215780632a6233d614610ac6578063377f9a39146109e757806340a723861461094057806355e23ad5146108695780636db65619146108375780637737a51a146106ad57806393a1d7011461067d578063b9d6be5e146105f2578063cd1f45fd146103f9578063d5de73661461032e5763ed4daedc146100af575f80fd5b3461032a57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261032a5781516100e881610d27565b600b81526020928382017f556e6b6e6f776e283078290000000000000000000000000000000000000000008152303b156103265781517f6db656190000000000000000000000000000000000000000000000000000000081525f905f818781305afa9081610313575b506102eb5790610271603b61017f61023c959461016c610dbd565b86519161017883610d0b565b8252610e3b565b928451898101906101a58b828b51610198818789610e1a565b8101038084520182610d43565b5190208551908a82018651926101c58d82818b019661019881878a610e1a565b519020149486519788936102068d86019b7f4578706563746564207b200000000000000000000000000000000000000000008d52518092602b880190610e1a565b8401917f207d2c2062757420676f74207b20000000000000000000000000000000000000602b8401525180936039840190610e1a565b017f207d000000000000000000000000000000000000000000000000000000000000603982015203601b810186520184610d43565b1561027a578580f35b604493926102e27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093601f93519788967f08c379a000000000000000000000000000000000000000000000000000000000885287015251809281602488015287870190610e1a565b01168101030190fd5b8483517fd6991147000000000000000000000000000000000000000000000000000000008152fd5b61031e919250610cae565b5f905f610151565b5f80fd5b8280fd5b5034610326575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261032657303b15610326575f825180927fb9d6be5e00000000000000000000000000000000000000000000000000000000825281305afa90816103e6575b506103e2576103e2906103a8610dbd565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0825101825251906103da82610d0b565b838252610e3b565b5080f35b6103f1919350610cae565b5f915f610397565b5034610326575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261032657610430610d84565b90303b15610326578251927f93a1d7010000000000000000000000000000000000000000000000000000000084525f935f818481305afa90816105df575b506105b9576104ad7f4578706563746564207b2000000000000000000000000000000000000000000093946104a1610dbd565b83519161017883610d0b565b93815161054b603b602080988185018651956104d38482818b019961019881878d610e1a565b519020906105168851928484018351946104f787828188019861019881878c610e1a565b51902014966102068a51998a9687019d8e52518092602b880190610e1a565b017f207d000000000000000000000000000000000000000000000000000000000000603982015203601b810185520183610d43565b1561055257005b6044936102e2601f927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe094519788967f08c379a000000000000000000000000000000000000000000000000000000000885287015251809281602488015287870190610e1a565b517fd6991147000000000000000000000000000000000000000000000000000000008152fd5b6105ea919550610cae565b5f938561046e565b5034610326575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261032657602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600660248201527f726561736f6e00000000000000000000000000000000000000000000000000006044820152fd5b34610326575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261032657005b509034610326575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610326578051916106e983610cef565b60498352602091828401937f50616e696328307830303030303030303030303030303030303030303030303085527f3030303030303030303030303030303030303030303030303030303030303030828201527f30303030303030312900000000000000000000000000000000000000000000006060820152303b15610326578151947f2a6233d60000000000000000000000000000000000000000000000000000000086525f955f818681305afa9081610824575b506107fc5761054b603b866107e47f4578706563746564207b2000000000000000000000000000000000000000000098996107d8610dbd565b88519161017883610d0b565b8651828101906104d384828a5161019881878d610e1a565b5050517fd6991147000000000000000000000000000000000000000000000000000000008152fd5b61082f919750610cae565b5f958761079f565b34610326575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610326575f80fd5b5034610326575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261032657602060a49251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152605260248201527f56657279206c6f6e67207465787420746f207465737420666f7220726576657260448201527f747320746861742072657475726e20737472696e67206f66206d6f726520746860648201527f616e203332206279746573206c656e67746800000000000000000000000000006084820152fd5b5034610326575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261032657610977610d84565b90303b15610326578251927fb9d6be5e0000000000000000000000000000000000000000000000000000000084525f935f818481305afa90816105df57506105b9576104ad7f4578706563746564207b2000000000000000000000000000000000000000000093946104a1610dbd565b509034610326575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261032657805191610a2383610d27565b60078352602091828401937f4572726f722829000000000000000000000000000000000000000000000000008552303b15610326578151947f25ebc4150000000000000000000000000000000000000000000000000000000086525f955f818681305afa908161082457506107fc5761054b603b866107e47f4578706563746564207b2000000000000000000000000000000000000000000098996107d8610dbd565b5034610326575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610326576001907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b509034610326575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261032657805191610b5d83610cef565b60598352602091828401937f4572726f722856657279206c6f6e67207465787420746f207465737420666f7285527f207265766572747320746861742072657475726e20737472696e67206f66206d828201527f6f7265207468616e203332206279746573206c656e67746829000000000000006060820152303b15610326578151947f55e23ad50000000000000000000000000000000000000000000000000000000086525f955f818681305afa908161082457506107fc5761054b603b866107e47f4578706563746564207b2000000000000000000000000000000000000000000098996107d8610dbd565b905034610326575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103265760206044927f08c379a00000000000000000000000000000000000000000000000000000000083528201525f6024820152fd5b67ffffffffffffffff8111610cc257604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6080810190811067ffffffffffffffff821117610cc257604052565b6020810190811067ffffffffffffffff821117610cc257604052565b6040810190811067ffffffffffffffff821117610cc257604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610cc257604052565b60405190610d9182610d27565b600d82527f4572726f7228726561736f6e29000000000000000000000000000000000000006020830152565b3d15610e15573d9067ffffffffffffffff8211610cc25760405191610e0a60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184610d43565b82523d5f602084013e565b606090565b5f5b838110610e2b5750505f910152565b8181015183820152602001610e1c565b80515f60048210156110df575b7fffffffff00000000000000000000000000000000000000000000000000000000167f08c379a0000000000000000000000000000000000000000000000000000000008114806110d4575b1561101057505060448101815181516044019081604411610fe3571015610f5157506029610ec3610f4e926110ea565b926040519381610edd869351809260208087019101610e1a565b82017f556e6b6e6f776e280000000000000000000000000000000000000000000000006020820152610f19825180936020602885019101610e1a565b017f29000000000000000000000000000000000000000000000000000000000000006028820152036009810184520182610d43565b90565b610fae92610f4e926027926040519583610f75889551809260208089019101610e1a565b8401917f4572726f7228000000000000000000000000000000000000000000000000000060208401525180936064602685019101610e1a565b017f29000000000000000000000000000000000000000000000000000000000000006026820152036007810184520182610d43565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000001490816110c9575b5061104c576029610ec3610f4e926110ea565b6027610fae926024610f4e9301516110786040516020928382015282815261107381610d27565b6110ea565b9060405195836110918895518092858089019101610e1a565b8401917f50616e6963280000000000000000000000000000000000000000000000000000818401528351938491602685019101610e1a565b60249150145f611039565b506044821015610e93565b506020820151610e48565b9060408051928051918260011b91600260228701936022818901016040526130788289015201865260208094818301920101925b83821061112c575050505050565b8285916114b184516112f2817f3030303030303030303030303030303030303030303030303030303030303030908060401c907fffffffff000000000000000000000000000000000000000000000000000000006fffffffff0000000000000000000000006bffffffff000000000000000084167bffffffff00000000000000000000000000000000000000000000000084161760201c9316911617178060101c907fff00000000000000ff00000000000000ff00000000000000ff000000000000007bff00000000000000ff00000000000000ff00000000000000ff0000007aff00000000000000ff00000000000000ff00000000000000ff000084167eff00000000000000ff00000000000000ff00000000000000ff00000000000084161760081c9316911617177f0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f007e0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f8260081c169160041c161760077f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f7f0606060606060606060606060606060606060606060606060606060606060606830160041c1602010190565b835260801b7f3030303030303030303030303030303030303030303030303030303030303030908060401c907fffffffff000000000000000000000000000000000000000000000000000000006fffffffff0000000000000000000000006bffffffff000000000000000084167bffffffff00000000000000000000000000000000000000000000000084161760201c9316911617178060101c907fff00000000000000ff00000000000000ff00000000000000ff000000000000007bff00000000000000ff00000000000000ff00000000000000ff0000007aff00000000000000ff00000000000000ff00000000000000ff000084167eff00000000000000ff00000000000000ff00000000000000ff00000000000084161760081c9316911617177f0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f007e0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f8260081c169160041c161760077f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f7f0606060606060606060606060606060606060606060606060606060606060606830160041c1602010190565b838201520191019061111e56fea2646970667358221220acdff38a71d425f91625fbd2c8bab681a9baffd1969514b41f973b5b876099eb64736f6c63430008170033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "TestDidNotThrow";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "assertion";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "emptyRevert";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "emptyStringRevert";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "longStringRevert";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "nonEmptyRevert";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "testAssertion";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "testEmptyRevert";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "testEmptyStringRevert";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "testLongStringRevert";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "testNonEmptyRevert";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "testParseWithThrow";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "testWithThrow";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "withoutAssertion";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }];
    static createInterface(): RevertReasonParserTestInterface;
    static connect(address: string, runner?: ContractRunner | null): RevertReasonParserTest;
}
export {};
