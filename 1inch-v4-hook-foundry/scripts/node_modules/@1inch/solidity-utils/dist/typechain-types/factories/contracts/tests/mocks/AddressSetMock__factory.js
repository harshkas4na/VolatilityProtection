"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddressSetMock__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "IndexOutOfBounds",
        type: "error",
    },
    {
        inputs: [],
        name: "PopFromEmptyArray",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "item",
                type: "address",
            },
        ],
        name: "add",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "index",
                type: "uint256",
            },
        ],
        name: "at",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "item",
                type: "address",
            },
        ],
        name: "contains",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "length",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "item",
                type: "address",
            },
        ],
        name: "remove",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x6080806040523461001657610516908161001b8239f35b5f80fdfe6040608081526004361015610012575f80fd5b5f3560e01c80630a3b0a4f146101c35780631f7b6d321461017d57806329092d0e146101185780635dbe47e8146100b05763e0886f9014610051575f80fd5b346100ac5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ac576020906004355f525f825273ffffffffffffffffffffffffffffffffffffffff815f2054169051908152f35b5f80fd5b50346100ac5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ac576004359073ffffffffffffffffffffffffffffffffffffffff82168092036100ac576020915f5260018252805f205415159051908152f35b50346100ac5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ac576004359073ffffffffffffffffffffffffffffffffffffffff821682036100ac57610174602092610313565b90519015158152f35b50346100ac575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ac576020905f80525f8252805f205460a01c9051908152f35b50346100ac5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100ac576004359073ffffffffffffffffffffffffffffffffffffffff821682036100ac5761017460209273ffffffffffffffffffffffffffffffffffffffff16805f52600160205260405f205461030e575f8080526020527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5805460019260a082901c929091836102e75750505f80805260205274010000000000000000000000000000000000000000810174ffffffffffffffffffffffffffffffffffffffffff167fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5555b5f52816020520160405f2055600190565b74010000000000000000000000000000000000000000019055815f528060405f20556102d6565b505f90565b73ffffffffffffffffffffffffffffffffffffffff809116805f5260209060018252604092835f20549081156104d7575f80525f8452845f205460a01c90818310610411575b5050505f80525f8252825f20548060a01c80156103e857915f9493916001847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82960188528785528787812055116103b8575b50845252812055600190565b7fffffffffffffffffffffffff00000000000000000000000000000000000000009086805201848620555f6103ac565b600485517f06a2af9e000000000000000000000000000000000000000000000000000000008152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8092015f52855f2054169082015f8052855f2054908160a01c8110156104ae578291908061049c57507fffffffffffffffffffffffff0000000000000000000000000000000000000000905f80525f87521617855f20555b5f5260018352835f20555f8080610359565b9150505f525f845280855f205561048a565b600487517f4e23d035000000000000000000000000000000000000000000000000000000008152fd5b50505050505f9056fea2646970667358221220cb858a5213d4d4459b6864c2ffe97262863c8afaffdaa1119848d9b3e7ba838e64736f6c63430008170033";
const isSuperArgs = (xs) => xs.length > 1;
class AddressSetMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.AddressSetMock__factory = AddressSetMock__factory;
AddressSetMock__factory.bytecode = _bytecode;
AddressSetMock__factory.abi = _abi;
//# sourceMappingURL=AddressSetMock__factory.js.map