import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type { ERC20ThroughZeroApprove, ERC20ThroughZeroApproveInterface } from "../../../../../contracts/tests/mocks/SafeERC20Helper.sol/ERC20ThroughZeroApprove";
type ERC20ThroughZeroApproveConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ERC20ThroughZeroApprove__factory extends ContractFactory {
    constructor(...args: ERC20ThroughZeroApproveConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ERC20ThroughZeroApprove & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): ERC20ThroughZeroApprove__factory;
    static readonly bytecode = "0x60808060405234610016576101c2908161001b8239f35b5f80fdfe60806040908082526004361015610014575f80fd5b5f3560e01c908163095ea7b3146100ad575063dd62ed3e14610034575f80fd5b346100a957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100a95761006a610169565b9060243573ffffffffffffffffffffffffffffffffffffffff8082168092036100a957602093165f525f8352815f20905f528252805f20549051908152f35b5f80fd5b82346100a957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100a9576100e4610169565b60243592335f525f60205273ffffffffffffffffffffffffffffffffffffffff835f20921691825f52602052825f2054151580610160575b6101385750335f525f602052815f20905f526020525f20555f80f35b807f14ca8d1e0000000000000000000000000000000000000000000000000000000060049252fd5b5083151561011c565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036100a95756fea26469706673582212209b9a49397cef4c337b37867dfdd03022eb674532533a1cb825910023a3cae09a64736f6c63430008170033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "NonZeroToNonZeroApprove";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "spender";
            readonly type: "address";
        }];
        readonly name: "allowance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): ERC20ThroughZeroApproveInterface;
    static connect(address: string, runner?: ContractRunner | null): ERC20ThroughZeroApprove;
}
export {};
