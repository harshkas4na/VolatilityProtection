import { ChainConfig } from '@nomicfoundation/hardhat-verify/src/types';
import { NetworksUserConfig } from 'hardhat/types';
export type Etherscan = {
    apiKey: {
        [key: string]: string;
    };
    customChains: ChainConfig[];
};
export declare function getNetwork(): string;
export declare class Networks {
    networks: NetworksUserConfig;
    etherscan: Etherscan;
    constructor(useHardhat?: boolean, forkingNetworkName?: string, needAuthKeyHttpHeader?: boolean, saveHardhatDeployments?: boolean);
    updateHardhatNetwork(useHardhat: boolean, forkingNetworkName?: string, needAuthKeyHttpHeader?: boolean, saveHardhatDeployments?: boolean): void;
    register(name: string, chainId: number, url?: string, privateKey?: string, etherscanNetworkName?: string, etherscanKey?: string, hardfork?: string): void;
    registerCustom(name: string, chainId: number, url?: string, privateKey?: string, etherscanKey?: string, apiURL?: string, browserURL?: string, hardfork?: string): void;
    registerZksync(): void;
    registerAll(): {
        networks: NetworksUserConfig;
        etherscan: Etherscan;
    };
    unregister(name: string): void;
    unregisterBatch(names: string[]): void;
}
