"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertRoughlyEqualValues = void 0;
const prelude_1 = require("./prelude");
function assertRoughlyEqualValues(expected, actual, relativeDiff) {
    let expectedBN = BigInt(expected);
    let actualBN = BigInt(actual);
    (0, prelude_1.expect)(expectedBN * actualBN).to.be.gte(0, 'Values are of different sign');
    if (expectedBN < 0)
        expectedBN = -expectedBN;
    if (actualBN < 0)
        actualBN = -actualBN;
    let multiplerNumerator = relativeDiff;
    let multiplerDenominator = 1n;
    while (!Number.isInteger(multiplerNumerator)) {
        multiplerDenominator = multiplerDenominator * 10n;
        multiplerNumerator *= 10;
    }
    const diff = expectedBN > actualBN ? expectedBN - actualBN : actualBN - expectedBN;
    const treshold = (expectedBN * BigInt(multiplerNumerator)) / multiplerDenominator;
    if (diff > treshold) {
        (0, prelude_1.expect)(actualBN).to.be.equal(expectedBN, `${actual} != ${expected} with ${relativeDiff} precision`);
    }
}
exports.assertRoughlyEqualValues = assertRoughlyEqualValues;
//# sourceMappingURL=asserts.js.map