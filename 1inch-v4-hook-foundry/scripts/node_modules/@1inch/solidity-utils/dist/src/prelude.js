"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.should = exports.config = exports.expect = exports.assert = exports.AssertionError = exports.Assertion = exports.ether = exports.time = exports.constants = void 0;
const chai_1 = require("chai");
Object.defineProperty(exports, "Assertion", { enumerable: true, get: function () { return chai_1.Assertion; } });
Object.defineProperty(exports, "AssertionError", { enumerable: true, get: function () { return chai_1.AssertionError; } });
Object.defineProperty(exports, "assert", { enumerable: true, get: function () { return chai_1.assert; } });
Object.defineProperty(exports, "expect", { enumerable: true, get: function () { return chai_1.expect; } });
Object.defineProperty(exports, "config", { enumerable: true, get: function () { return chai_1.config; } });
Object.defineProperty(exports, "should", { enumerable: true, get: function () { return chai_1.should; } });
const ethers_1 = require("ethers");
const hardhat_network_helpers_1 = require("@nomicfoundation/hardhat-network-helpers");
Object.defineProperty(exports, "time", { enumerable: true, get: function () { return hardhat_network_helpers_1.time; } });
exports.constants = {
    ZERO_ADDRESS: '0x0000000000000000000000000000000000000000',
    EEE_ADDRESS: '0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE',
    ZERO_BYTES32: '0x0000000000000000000000000000000000000000000000000000000000000000',
    MAX_UINT256: 2n ** 256n - 1n,
    MAX_INT256: 2n ** 255n - 1n,
    MAX_UINT48: 2n ** 48n - 1n,
    MIN_INT256: -(2n ** 255n),
    MAX_UINT128: 2n ** 128n - 1n,
    MAX_UINT32: 2n ** 32n - 1n,
    DEV_CHAINS: ['hardhat', 'localhost'],
};
function ether(n) {
    return (0, ethers_1.parseUnits)(n);
}
exports.ether = ether;
//# sourceMappingURL=prelude.js.map