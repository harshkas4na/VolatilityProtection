import { AbstractSmartcontractFacade } from "./utils/abstract-facade";
import { LimitOrderHash, LimitOrderLegacy, LimitOrderProtocolMethodsV3 } from "./model/limit-order-protocol.model";
import { BigNumber } from "@ethersproject/bignumber";
export declare class LimitOrderProtocolV3Facade extends AbstractSmartcontractFacade<LimitOrderProtocolMethodsV3> {
    ABI: import(".").AbiItem[];
    checkPredicate(order: LimitOrderLegacy): Promise<boolean>;
    cancelLimitOrder(order: LimitOrderLegacy): string;
    nonce(makerAddress: string): Promise<bigint>;
    advanceNonce(count: number): string;
    increaseNonce(): string;
    remaining(orderHash: LimitOrderHash): Promise<BigNumber>;
    parseRemainingResponse(response: string): BigNumber | null;
    hashOrder(order: LimitOrderLegacy): string;
    callHashOrder(order: LimitOrderLegacy): Promise<string>;
    isValidSignature(orderHash: string, signature: string): string;
    callIsValidSignature(orderHash: string, signature: string): Promise<string>;
}
