import { LimitOrder, LimitOrderSignature } from "./model/limit-order-protocol.model";
import { Address } from "./model/eth.model";
import { EIP712ParamsExtended } from "./limit-order.builder";
import { EIP712TypedData } from "./model/eip712.model";
import { ProviderConnector } from "./connector/provider.connector";
export declare class LimitOrderSignatureBuilder {
    private readonly providerConnector;
    private readonly eip712Params;
    constructor(providerConnector: ProviderConnector, eip712Params: EIP712ParamsExtended);
    buildLimitOrderTypedData(order: LimitOrder, chainId: number, verifyingContract: Address): EIP712TypedData;
    buildTypedDataAndSign(order: LimitOrder, chainId: number, verifyingContract: Address, wallet: Address): Promise<LimitOrderSignature>;
    buildOrderSignature(wallet: Address, typedData: EIP712TypedData): Promise<LimitOrderSignature>;
}
