import { ExtensionParams, ExtensionParamsWithCustomData, LimitOrder, LimitOrderData, LimitOrderInteractions, LimitOrderWithExtension } from './model/limit-order-protocol.model';
import { EIP712Parameter } from './model/eip712.model';
import { ProviderConnector } from './connector/provider.connector';
import { BaseLimitOrderBuilder } from "./base-limit-order.builder";
export declare function generateOrderSalt(): string;
export interface EIP712Params {
    domainName: string;
    version: string;
}
export interface EIP712ParamsExtended extends EIP712Params {
    orderStructure: EIP712Parameter[];
}
export declare class LimitOrderBuilder extends BaseLimitOrderBuilder<LimitOrder> {
    protected readonly providerConnector: ProviderConnector;
    protected readonly eip712Params: EIP712Params;
    constructor(providerConnector: ProviderConnector, eip712Params: EIP712Params);
    static packInteractions({ makerAssetSuffix, takerAssetSuffix, makingAmountGetter, takingAmountGetter, predicate, permit, preInteraction, postInteraction, }: ExtensionParams): LimitOrderInteractions;
    static buildMakerTraits({ allowedSender, shouldCheckEpoch, allowPartialFill, allowPriceImprovement, allowMultipleFills, usePermit2, unwrapWeth, expiry, nonce, series, }?: {
        allowedSender?: string | undefined;
        shouldCheckEpoch?: boolean | undefined;
        allowPartialFill?: boolean | undefined;
        allowPriceImprovement?: boolean | undefined;
        allowMultipleFills?: boolean | undefined;
        usePermit2?: boolean | undefined;
        unwrapWeth?: boolean | undefined;
        expiry?: number | undefined;
        nonce?: bigint | undefined;
        series?: bigint | undefined;
    }): string;
    /**
     * @param allowedSender formerly `takerAddress`
     * @returns
     */
    buildLimitOrder({ maker, receiver, makerAsset, takerAsset, makingAmount, takingAmount, makerTraits, salt, }: LimitOrderData, { makerAssetSuffix, takerAssetSuffix, makingAmountGetter, takingAmountGetter, predicate, permit, preInteraction, postInteraction, customData }?: ExtensionParamsWithCustomData): LimitOrderWithExtension;
}
