/**
 * @deprecated
 */
export const NonceSeriesLegacyV1 = {
    P2Pv2: BigInt(1),
};
export const NonceSeriesV2 = {
    /**
     * This is not a valid option.
     *
     * @deprecated Gasless should use main contract's built-in nonce manager
     * to avoid arbitraryStaticCall() and save gas.
     */
    GaslessV3: BigInt(-1), // should lead to "execution reverted"
    // Those are valid
    _GaslessV3: BigInt(-1), // for internal usage
    LimitOrderV3: BigInt(0),
    P2PV3: BigInt(1),
};
export var SeriesNonceManagerMethods;
(function (SeriesNonceManagerMethods) {
    SeriesNonceManagerMethods["nonce"] = "nonce";
    SeriesNonceManagerMethods["advanceNonce"] = "advanceNonce";
    SeriesNonceManagerMethods["increaseNonce"] = "increaseNonce";
    SeriesNonceManagerMethods["nonceEquals"] = "nonceEquals";
    // Don't expose timestampBelow as it's usless.
    SeriesNonceManagerMethods["timestampBelowAndNonceEquals"] = "timestampBelowAndNonceEquals";
})(SeriesNonceManagerMethods || (SeriesNonceManagerMethods = {}));
//# sourceMappingURL=series-nonce-manager.model.js.map