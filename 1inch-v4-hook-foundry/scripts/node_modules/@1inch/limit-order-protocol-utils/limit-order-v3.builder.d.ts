import { ProviderConnector } from './connector/provider.connector';
import { InteractionsV3, LimitOrderDataLegacy, LimitOrderInteractions, LimitOrderLegacy } from './model/limit-order-protocol.model';
import { EIP712Params } from './limit-order.builder';
import { BaseLimitOrderBuilder } from "./base-limit-order.builder";
export declare class LimitOrderV3Builder extends BaseLimitOrderBuilder<LimitOrderLegacy> {
    protected readonly providerConnector: ProviderConnector;
    protected readonly eip712Params: EIP712Params;
    constructor(providerConnector: ProviderConnector, eip712Params: EIP712Params);
    static packInteractions({ makerAssetData, takerAssetData, getMakingAmount, getTakingAmount, predicate, permit, preInteraction, postInteraction, }: Partial<InteractionsV3>): LimitOrderInteractions;
    buildLimitOrder({ makerAssetAddress, takerAssetAddress, makerAddress, receiver, allowedSender, makingAmount, takingAmount, predicate, permit, getMakingAmount, getTakingAmount, preInteraction, postInteraction, salt, }: LimitOrderDataLegacy): LimitOrderLegacy;
}
