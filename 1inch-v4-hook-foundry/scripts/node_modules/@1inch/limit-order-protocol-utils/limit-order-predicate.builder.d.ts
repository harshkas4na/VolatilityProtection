import { LimitOrderProtocolFacade } from './limit-order-protocol.facade';
import { AbstractSmartcontractFacade } from './utils/abstract-facade';
export type LimitOrderPredicateCallData = string;
/**
 * All methods is lambdas to preserve `this` context and allow DSL-like usage
 */
export declare class LimitOrderPredicateBuilder {
    private readonly facade;
    constructor(facade: LimitOrderProtocolFacade);
    and: (...predicates: LimitOrderPredicateCallData[]) => LimitOrderPredicateCallData;
    or: (...predicates: LimitOrderPredicateCallData[]) => LimitOrderPredicateCallData;
    eq: (value: string, callData: string) => LimitOrderPredicateCallData;
    lt: (value: string, callData: string) => LimitOrderPredicateCallData;
    gt: (value: string, callData: string) => LimitOrderPredicateCallData;
    arbitraryStaticCall: (target: string | AbstractSmartcontractFacade<string>, callData: string) => LimitOrderPredicateCallData;
}
